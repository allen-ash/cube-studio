{"version":3,"file":"static/js/672.edec9d2f.chunk.js","mappings":"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","sources":["components/TitleHeader/TitleHeader.tsx","components/TableBox/TableBox.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","pages/ADUGTemplate.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input } from 'antd';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText=\"确定\"\n\t\t\tcancelText=\"取消\"\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请选择key' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请填写value' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t查询\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>展开</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>收起</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, getCustomDialog } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig, TDynamicFormType } from '../components/DynamicForm/DynamicForm';\nimport { columnConfig } from './columnConfig';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 10;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState(false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [customDialogVisable, setCustomDialogVisable] = useState(false)\n    const [customDialogTitle, setCustomDialogTitle] = useState<string>()\n    const [customDialogContent, setCustomDialogContent] = useState<string>()\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const [dateInfo, setDateInfo] = useState<{\n        startTime: string,\n        endTime: string\n    }>({\n        startTime: moment().subtract(1, 'd').startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n        endTime: moment().subtract(1, 'd').endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    })\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [10, 20, 50, 100, 500],\n        showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    // const customFilter: IMixSearchParamItem[] = [\n    //     { name: 'test1', type: 'input' },\n    //     { name: 'test2', type: 'select', option: [{ label: 'title1', value: 'value1' }, { label: 'title2', value: 'value2' }] },\n    //     { name: 'test3', type: 'input' },\n    //     { name: 'test4', type: 'select' },\n    // ]\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        const url = encodeURIComponent(location.pathname)\n        getCustomDialog(url).then(res => {\n            const { title, content, hit } = res.data\n            setCustomDialogTitle(title)\n            setCustomDialogContent(content)\n            setCustomDialogVisable(hit)\n        }).catch(err => {\n            console.log(err);\n        })\n    }, [])\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            // 表格字段处理\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            // 表单字段处理\n            const createDyFormConfig = (data: Record<string, any>[]): IDynamicFormConfigItem[] => {\n                return data.map((item, index) => {\n                    let type = item['ui-type'] || 'input'\n                    if (type === 'select2') {\n                        type = 'select'\n                    }\n                    const label = item.label || label_columns[item.name]\n\n                    // 校验规则\n                    const rules = (item.validators || []).map((item: any) => {\n                        switch (item.type) {\n                            case 'DataRequired':\n                                return { required: true, message: `请输入${label}` }\n                            case 'Regexp':\n                                return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                            case 'Length':\n                                return { min: item.min, max: item.max, message: `请输入正确的长度` }\n                            default:\n                                return undefined\n                        }\n                    }).filter((item: any) => !!item)\n\n                    const list = createDyFormConfig((item.info || []))\n\n                    const res: IDynamicFormConfigItem = {\n                        label,\n                        type,\n                        rules,\n                        list,\n                        name: item.name,\n                        disable: item.disable,\n                        description: item.description || description_columns[item.name] || undefined,\n                        required: item.required,\n                        defaultValue: item.default === '' ? undefined : item.default,\n                        multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                        options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                    }\n                    return res\n                })\n            }\n\n            const tableAction: any = {\n                title: '操作',\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            详情\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData)\n                                                    }\n                                                })\n\n                                                console.log(formConfigUpdate);\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn('用户没有修改权限')\n                                            })\n                                        }}>\n                                            修改\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '删除',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定删除?',\n                                                okText: '确认删除',\n                                                cancelText: '取消',\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('删除成功');\n                                                            console.log(filterValuesRef.current);\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('删除失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            删除\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: `确认${action.confirmation}`,\n                                                    cancelText: '取消',\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve('');\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject();\n                                                                });\n                                                        })\n                                                            .then((res) => {\n                                                                message.success('操作成功');\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('操作失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {action.text}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">更多<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error('filter解析异常')\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n            fetchData({\n                pageConf: pageInfoInit,\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n        })\n\n    }, []);\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined\n        }) => {\n        setLoading(true);\n        let form_data = undefined\n        const temlateId = getParam('id')\n\n        form_data = JSON.stringify({\n            str_related: 1,\n            \"filters\": [\n                temlateId ? {\n                    \"col\": props?.model_name,\n                    \"opr\": \"rel_o_m\",\n                    \"value\": +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    console.log(paramsMap[param.key]);\n                    let opr = ''\n                    if (!isNaN(+param.value) && paramsMap[param.key] && !(paramsMap[param.key].type === 'Related' || paramsMap[param.key].type === 'QuerySelect')) {\n                        opr = 'eq'\n                    } else {\n                        const oprList = ['ct', 'lt', 'eq', 'rel_o_m']\n                        const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                        for (let i = 0; i < oprList.length; i++) {\n                            const currentOpr = oprList[i];\n                            if (sourceOprList.includes(currentOpr)) {\n                                opr = currentOpr\n                                break\n                            }\n                        }\n                    }\n\n                    return {\n                        \"col\": param.key,\n                        \"opr\": opr,\n                        \"value\": param.value\n                    }\n                })\n            ].filter(item => !!item),\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            // console.log(selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey]));\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: `确认${action.confirmation}`,\n                cancelText: '取消',\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success('操作成功');\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error('操作失败');\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            if (!isCSV) {\n                message.error(`${file.name} 并不是csv文件`);\n            }\n            return isCSV || Upload.LIST_IGNORE;\n        },\n        onChange(info) {\n            // if (info.file.status !== 'uploading') {\n            //     console.log(info.file, info.fileList);\n            // }\n            if (info.file.status === 'done') {\n                // message.success(`${info.file.name}，${info.file.response.message}`);\n                notification['success']({\n                    message: '导入成功',\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                // message.error(`${info.file.name} 数据导入失败`);\n                notification['error']({\n                    message: '导入失败',\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in\">\n            {/* 自定义弹窗 */}\n            <Drawer contentWrapperStyle={{ width: 'auto' }} title={customDialogTitle} placement=\"right\" onClose={() => { setCustomDialogVisable(false) }} visible={customDialogVisable}>\n                <div dangerouslySetInnerHTML={{ __html: customDialogContent || '' }}></div>\n            </Drawer>\n            {/* 添加 */}\n            <ModalForm\n                title={`添加${labelTitle}`}\n                width={800}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`添加${labelTitle}成功`)\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`添加${labelTitle}失败`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`修改${labelTitle}`}\n                width={800}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`更新${labelTitle}成功`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`更新${labelTitle}失败`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle}详情`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><span dangerouslySetInnerHTML={{ __html: item.value }}></span></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />返回</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-hint-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>帮助链接</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title\">\n                {/* <div>\n                    <img className=\"m32\" style={{ height: 42 }} src={require('../images/star2.svg').default} alt=\"\" />\n                </div> */}\n                {\n                    !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                        localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                        setFilterValues(values)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfoInit,\n                            params: values,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }} />\n                }\n                {/* {\n                    tips.length ? <div className=\"bg-module mlr24 p16\">\n                        {tips.map((item, index) => {\n                            return <div key={`ADUGTemplate_tips_${index}`}><span>{labelMapRef.current[item.label] || item.label}：</span><span>{item.value}</span></div>\n                        })}\n                    </div> : null\n                } */}\n                <div className=\"m16\">\n                    <TableBox\n                        tableKey={`tablebox_${location.pathname}`}\n                        titleNode={<Col className=\"tablebox-title\">{labelTitle}列表</Col>}\n                        buttonNode={<div className=\"d-f ac\">\n                            {\n                                permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>添加{labelTitle}<PlusOutlined /></Button> : null\n                            }\n                            <div>\n                                <Dropdown overlay={<Menu>\n                                    {\n                                        multipleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_muliple_${index}`}>\n                                                <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                    {`批量${action.text}`}\n                                                </span>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <Button>批量操作 <DownOutlined /></Button>\n                                </Dropdown>\n                            </div>\n                            {\n                                isImportData ? <div className=\"d-f ml16\">\n                                    <Tooltip title={<span className=\"tips-content\">注意：csv逗号分隔，第一行为列的英文名</span>} placement=\"topLeft\">\n                                        <Upload {...uploadConfig}>\n                                            <Button className=\"\" icon={<UploadOutlined />}>导入数据</Button>\n                                        </Upload>\n                                    </Tooltip>\n                                </div> : null\n                            }\n                        </div>}\n                        rowKey={(record: any) => {\n                            return JSON.stringify(record)\n                        }}\n                        columns={currentColumns}\n                        loading={loading}\n                        pagination={pageInfo}\n                        dataSource={dataList}\n                        onChange={(pageInfo: any, filters, sorter: any) => {\n                            const tarSorter = sorter.order ? {\n                                order_column: sorter.columnKey,\n                                order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                            } as ISorterParam : undefined\n\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                paramsMap: filterParamsMap,\n                                sorter: tarSorter\n                            });\n                            // setPageInfo(pageInfo)\n                        }}\n                        rowSelection={{\n                            type: 'checkbox',\n                            fixed: 'left',\n                            columnWidth: 80,\n                            selectedRowKeys,\n                            onChange: (selectedRowKeys) => {\n                                setSelectedRowKeys(selectedRowKeys)\n                            }\n                        }}\n                        scroll={{ x: tableWidth, y: scrollY }}\n                    />\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n"],"names":["Title","Typography","props","styles","position","top","className","justify","align","style","noBorderBottom","borderBottom","level","marginBottom","title","breadcrumbs","children","CopyToClipboard","require","customizeRenderEmpty","height","flexDirection","src","emptyImg","width","alt","ResizableTitle","onResize","restProps","Resizable","handle","onClick","e","stopPropagation","draggableOpts","enableUserSelectHack","userSelect","useState","exportDataVisible","setExportDataVisible","header","data","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","index","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","map","col","onHeaderCell","column","scroll","useEffect","dataSource","filter","item","indexOf","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","length","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","maxHeight","overflow","visible","onCancel","footer","options","label","value","defaultValue","onChange","right","bottom","type","tab","text","onCopy","message","cursor","minHeight","option","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","loading","rowSelection","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","spinning","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","toString","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeholder","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","customDialogVisable","setCustomDialogVisable","customDialogTitle","setCustomDialogTitle","customDialogContent","setCustomDialogContent","selectedRowKeys","setSelectedRowKeys","startTime","moment","subtract","startOf","format","endTime","endOf","pageInfoInit","current","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","useRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","primaryKey","setPrimaryKey","labelTitle","setLabelTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","url","encodeURIComponent","pathname","getCustomDialog","content","hit","err","targetId","getParam","getADUGTemplateApiInfo","list_columns","label_columns","filters","add_columns","edit_columns","description_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","hasAction","related","cacheColumns","getItem","cacheColumnsWidthMap","parse","columnRelatedFormat","entries","dep","src_columns","effect","des_columns","effectOption","ePre","eNext","calculateId","src_value","des_value","listColumns","a","b","render","record","dangerouslySetInnerHTML","__html","placement","tarRes","actionList","multiple","singleAction","single","createDyFormConfig","validators","pattern","RegExp","regex","min","max","list","disable","description","default","id","tableAction","fixed","overlay","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","config","Modal","icon","ExclamationCircleOutlined","okButtonProps","danger","Promise","resolve","reject","actionADUGTemplateDelete","fetchData","confirmation","actionADUGTemplateSingle","tarColumns","addColumnsMap","formConfigAdd","formGroupConfigAdd","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setLabelMap","currentTableWidth","form_data","temlateId","str_related","model_name","opr","isNaN","sourceOprList","currentOpr","page","page_size","getADUGTemplateList","result","count","finally","getADUGTemplateDetail","detail","formatValue","last_name","keys","uploadConfig","maxCount","headers","authorization","beforeUpload","file","isCSV","Upload","status","notification","response","contentWrapperStyle","onClose","hasOwnProperty","Array","isArray","actionADUGTemplateAdd","DynamicForm","linkageConfig","configGroup","tarIndex","split","actionADUGTemplateUpdate","isSubRoute","window","reload","RollbackOutlined","crumbs","idx","open","QuestionCircleOutlined","actionADUGTemplateMuliple","ids","handleMultiRecord","UploadOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y"],"sourceRoot":""}
{"version":3,"file":"static/js/827.3b4b592f.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/SyncOutlined.js","../node_modules/@ant-design/icons/es/icons/SyncOutlined.js","pages/Swallow/InstanceListManager.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar SyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\" } }] }, \"name\": \"sync\", \"theme\": \"outlined\" };\nexport default SyncOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/SyncOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SyncOutlined = function SyncOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SyncOutlinedSvg\n  }));\n};\n\nSyncOutlined.displayName = 'SyncOutlined';\nexport default /*#__PURE__*/React.forwardRef(SyncOutlined);","import React, { ReactText, useEffect, useState } from 'react';\nimport { Button, Col, Form, FormInstance, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Radio, Tag, Tooltip, Spin, Select } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport { getInstanceManagerList, actionRedo, actionKill, actionMultiRedo, getInstanceLog } from '../../api/swallowApi';\nimport { IInstanceManagerItem, IInstanceManagerDescItem, IActionRedoParams } from '../../api/interface/swallowInterface';\nimport TitleHeader from '../../components/TitleHeader/TitleHeader';\nimport TableBox from '../../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CheckCircleOutlined, CloseCircleOutlined, CopyOutlined, DownOutlined, ExclamationCircleOutlined, SyncOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getTableScroll } from '../../util';\nimport ModalForm from '../../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { TInstanceState } from '../../api/interface/stateInterface';\n\nconst { RangePicker } = DatePicker;\n\nexport default function InstanceListManager() {\n    const userName = cookies.get('myapp_username') || ''\n    const PAGE_SIZE = 10;\n    const [dataList, setDataList] = useState<IInstanceManagerDescItem[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [inCharge, setInCharge] = useState<string | undefined>(cookies.get('myapp_username') || undefined)\n    const [searchParams] = useSearchParams();\n    const taskId = searchParams.get('taskId')\n    const [usTaskId, setUsTaskId] = useState<string | number>(taskId || '')\n    const [stateList, setStateList] = useState<number | string>()\n    const [isRelVisable, setisRelVisable] = useState(false)\n    const [loadingRedo, setLoadingRedo] = useState(false);\n    const [visableRedo, setVisableRedo] = useState(false)\n    const [isLogVisable, setIsLogVisable] = useState(false)\n    const [redoParams, setRedoParams] = useState<IActionRedoParams>()\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const [multiParams, setMultiParams] = useState<IInstanceManagerDescItem[]>([])\n    const [currentLog, setCurrentLog] = useState<string>('')\n    const [loadingLog, setLoadingLog] = useState(false)\n    const [dateInfo, setDateInfo] = useState<{\n        startTime: string,\n        endTime: string\n    }>({\n        startTime: moment().subtract(7, 'd').startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n        endTime: moment().subtract(0, 'd').endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    })\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        // total: 0,\n        // showSizeChanger: true,\n        // showQuickJumper: true,\n        // showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [scrollY, setScrollY] = useState(\"\")\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (taskId) {\n            fetchData();\n        }\n    }, []);\n\n    const fetchData = (pageConf = pageInfoInit) => {\n        setLoading(true);\n        getInstanceManagerList({\n            usTaskId: usTaskId || undefined,\n            inCharge: inCharge || undefined,\n            stateList: stateList !== '' ? stateList : undefined,\n            startTime: dateInfo.startTime,\n            endTime: dateInfo.endTime\n        })\n            .then((res) => {\n                const { data } = res.data;\n                setDataList(data[0].desc);\n                // setPageInfo({ ...pageConf, total });\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const handleMultiKill = () => {\n        if (multiParams.length) {\n            setVisableRedo(true)\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const handleMultiRedo = () => {\n        if (multiParams.length) {\n            setVisableRedo(true)\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    return (\n        <div className=\"fade-in\">\n            <Modal\n                title={'日志'}\n                destroyOnClose\n                visible={isLogVisable}\n                footer={null}\n                width={1700}\n                onCancel={() => { setIsLogVisable(false) }}>\n                <Spin spinning={loadingLog}>\n                    <div style={{ minHeight: 300 }} dangerouslySetInnerHTML={{ __html: currentLog.replaceAll('style>', 'style_abandon>') }}></div>\n                </Spin>\n            </Modal>\n            <ModalForm\n                title=\"重跑\"\n                loading={loadingRedo}\n                visible={visableRedo}\n                onCancel={() => { setVisableRedo(false) }}\n                onCreate={(values) => {\n                    setLoadingRedo(true)\n                    const { isRedoSubTask, isCheckParentInstance } = values\n                    const user = cookies.get('myapp_username') || '';\n\n                    const params = multiParams.map((item) => ({\n                        taskId: item.task_id,\n                        fromDate: item.cur_run_date,\n                        toDate: item.cur_run_date,\n                        user,\n                        param: `${isRedoSubTask}${isCheckParentInstance}`\n                    }))\n                    actionMultiRedo({ list: params, userName }).then((res: any) => {\n                        if (res.data.state === 'error') {\n                            message.error(res.data.desc)\n                        } else {\n                            message.success('重跑成功')\n                            fetchData()\n                            setVisableRedo(false)\n                        }\n                    }).catch(err => {\n                        message.error('重跑失败')\n                    }).finally(() => {\n                        setLoadingRedo(false)\n                    })\n                }}\n            >\n                <Form.Item\n                    label=\"是否重跑子任务\"\n                    name=\"isRedoSubTask\"\n                    initialValue={'1'}\n                    rules={[{ required: true, message: '请选择' }]}\n                >\n                    <Radio.Group>\n                        <Radio value={'1'}>只重跑所选任务本身</Radio>\n                        <Radio value={'2'}>重跑所选任务本身及其所有的递归子任务</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                    label=\"是否检查父实例\"\n                    name=\"isCheckParentInstance\"\n                    initialValue={'1'}\n                    rules={[{ required: true, message: '请选择' }]}\n                >\n                    <Radio.Group>\n                        <Radio value={'1'}>是</Radio>\n                        <Radio value={'2'}>否</Radio>\n                    </Radio.Group>\n                </Form.Item>\n            </ModalForm>\n            <TitleHeader title=\"实例运行管理\" />\n            <Content className=\"appmgmt-content\">\n                {/* <div className=\"d-f pt24 plr24\">\n\n                </div> */}\n                <div className=\"d-f plr24 fw\">\n                    <div className=\"mr16 mt24 d-f ac\">\n                        <span className=\"s0\" style={{ width: 80 }}>任务状态：</span>\n                        <Select style={{ width: 256 }} options={[\n                            { label: '全部', value: '' },\n                            { label: '成功', value: 2 },\n                            { label: '失败', value: 3 },\n                            { label: '终止', value: 8 },\n                            { label: '等待父任务', value: 0 },\n                            { label: '等待资源', value: 12 },\n                            { label: '正在运行', value: 1 },\n                        ]} onChange={(value) => {\n                            setStateList(value)\n                        }} placeholder=\"任务状态\" />\n                    </div>\n                    <div className=\"mr16 mt24 d-f ac\">\n                        <span className=\"s0\" style={{ width: 80 }}>任务名/Id：</span>\n                        <Input onPressEnter={() => { fetchData() }} placeholder=\"任务名/Id\" style={{ width: 256 }} value={usTaskId} onChange={(e) => setUsTaskId(e.target.value)} />\n                    </div>\n                    <div className=\"mr16 mt24 d-f ac\">\n                        <span className=\"ta-r s0\" style={{ width: 80 }}>负责人：</span>\n                        <Input onPressEnter={() => { fetchData() }} placeholder=\"负责人/英文名\" style={{ width: 256 }} value={inCharge} onChange={(e) => setInCharge(e.target.value)} />\n                    </div>\n                    <div className=\"mr16 mt24 d-f ac\">\n                        <span className=\"ta-r s0\" style={{ width: 80 }}>数据时间：</span>\n                        <RangePicker\n                            style={{ width: 256 }}\n                            value={[moment(dateInfo.startTime), moment(dateInfo.endTime)]}\n                            onChange={(value) => {\n                                if (value && value.length) {\n                                    const [startTime, endTime] = value\n                                    if (startTime && endTime) {\n                                        setDateInfo({\n                                            startTime: startTime.format('YYYY-MM-DD HH:mm:ss'),\n                                            endTime: endTime.format('YYYY-MM-DD HH:mm:ss'),\n                                        })\n                                    }\n                                }\n                            }}\n                            disabledDate={(current) => {\n                                return current && current > moment().endOf('day');\n                            }}\n                        />\n                        <Button className=\"ml16\" type=\"primary\" onClick={() => {\n                            if (usTaskId || inCharge) {\n                                fetchData()\n                            } else {\n                                message.warn('任务名/Id或者负责人不能都为空')\n                            }\n                        }}>搜索</Button>\n                    </div>\n\n\n                </div>\n                <div className=\"p16\">\n                    <TableBox\n                        titleNode={<Col className=\"tablebox-title\">实例列表</Col>}\n                        buttonNode={<div>\n                            <Dropdown overlay={<Menu>\n                                <Menu.Item>\n                                    <span className=\"link\" onClick={handleMultiRedo}>\n                                        批量重跑\n                                </span>\n                                </Menu.Item>\n                                <Menu.Item>\n                                    <span className=\"link\" onClick={handleMultiKill}>\n                                        批量终止\n                            </span>\n                                </Menu.Item>\n                            </Menu>}>\n                                <Button type='primary'>批量操作 <DownOutlined /></Button>\n                            </Dropdown>\n                        </div>}\n                        rowKey={(record: IInstanceManagerDescItem) => {\n                            return record.rowKey\n                        }}\n                        // buttonNode={\n                        //     <Button type=\"primary\" onClick={() => setVisible(true)}>\n                        //         新建\n                        //     </Button>\n                        // }\n                        columns={[\n                            {\n                                title: '任务',\n                                dataIndex: 'task_name',\n                                key: 'task_name',\n                                width: 400,\n                                fixed: 'left',\n                                render: (text: any, record: IInstanceManagerDescItem) => {\n                                    return <div>\n                                        <div className=\"pb4 link\">{record.task_name}</div>\n                                        <div>\n                                            <span className=\"pr4\">{record.task_id}</span>\n                                            <CopyToClipboard text={record.task_id} onCopy={() => {\n                                                message.success('已成功复制到粘贴板')\n                                            }}>\n                                                <CopyOutlined />\n                                            </CopyToClipboard>\n                                        </div>\n                                    </div>\n                                }\n                            },\n                            {\n                                title: '数据启始时间',\n                                dataIndex: 'cur_run_date',\n                                key: 'cur_run_date',\n                                width: 220,\n                                sorter: (a: IInstanceManagerDescItem, b: IInstanceManagerDescItem) => new Date(a.cur_run_date).valueOf() - new Date(b.cur_run_date).valueOf(),\n                            },\n                            {\n                                title: '实例执行时间',\n                                dataIndex: 'start_time',\n                                key: 'start_time',\n                                width: 220,\n                                render: (text: any, record: IInstanceManagerDescItem) => {\n                                    return <div>\n                                        <div>{record.start_time}</div>\n                                        <div>{record.end_time}</div>\n                                    </div>\n                                }\n                            },\n                            {\n                                title: '执行时长',\n                                dataIndex: 'span',\n                                key: 'span',\n                                width: 150\n                            },\n                            {\n                                title: '状态',\n                                dataIndex: 'state',\n                                key: 'state',\n                                width: 150,\n                                render: (text: any, record: IInstanceManagerDescItem) => {\n                                    switch (record.state) {\n                                        case '0':\n                                        case '1':\n                                        case '12':\n                                            return <Tag icon={<SyncOutlined spin />} color=\"processing\">\n                                                {TInstanceState[record.state]}\n                                            </Tag>\n                                        case '2':\n                                            return <Tag icon={<CheckCircleOutlined />} color=\"success\">\n                                                {TInstanceState[record.state]}\n                                            </Tag>\n                                        case '3':\n                                            return <Tag icon={<CloseCircleOutlined />} color=\"error\">\n                                                {TInstanceState[record.state]}\n                                            </Tag>\n                                        case '5':\n                                        case '11':\n                                            return <Tag icon={<ExclamationCircleOutlined />} color=\"warning\">\n                                                {TInstanceState[record.state]}\n                                            </Tag>\n                                        default:\n                                            return <Tag color=\"default\">{TInstanceState[record.state]}</Tag>\n                                    }\n                                }\n                            },\n                            {\n                                title: '负责人',\n                                dataIndex: 'in_charge',\n                                key: 'in_charge',\n                                width: 300,\n                                render: (text: any, record: IInstanceManagerDescItem) => {\n                                    return <Tooltip title={record.in_charge} placement=\"topLeft\">\n                                        <div className=\"ellip1\">\n                                            {record.in_charge}\n                                        </div>\n                                    </Tooltip>\n                                }\n                            },\n                            {\n                                title: '尝试次数',\n                                dataIndex: 'try_limit',\n                                key: 'try_limit',\n                                width: 150,\n                                render: (text: any, record: IInstanceManagerDescItem) => {\n                                    return <span>{record.tries} / {record.try_limit}</span>\n                                }\n                            },\n                            {\n                                title: '操作',\n                                width: 150,\n                                dataIndex: 'handle',\n                                key: 'handle',\n                                align: 'right',\n                                fixed: 'right',\n                                render: (text: any, record: IInstanceManagerDescItem) => {\n                                    return (\n                                        <Space size=\"middle\">\n                                            <span className=\"link\" onClick={() => {\n                                                setCurrentLog('')\n                                                setIsLogVisable(true)\n                                                setLoadingLog(true)\n                                                getInstanceLog({\n                                                    taskId: record.task_id,\n                                                    curRunDate: (record.cur_run_date || \"\").replaceAll('-', '').replaceAll(':', '').replaceAll(' ', '')\n                                                }).then(res => {\n                                                    console.log(res.data)\n                                                    if (res.data) {\n                                                        setCurrentLog(res.data)\n                                                    }\n                                                }).finally(() => {\n                                                    setLoadingLog(false)\n                                                })\n                                                // window.open(`https://us.oa.com/#/instance/log?taskId=${record.task_id}&curRunDate=${record.cur_run_date}&lastUpdate=${record.last_update}&state=${record.state}`)\n                                            }}>\n                                                日志\n                                        </span>\n                                            {/* <span className=\"link\" onClick={() => {\n\n                                        }}>\n                                            父实例\n                                        </span>\n                                        <span className=\"link\" onClick={() => { }}>\n                                            强制下发\n                                        </span> */}\n                                            <span className=\"link\" onClick={() => {\n                                                setMultiParams([record])\n                                                setSelectedRowKeys([record.rowKey])\n                                                setVisableRedo(true)\n                                            }}>\n                                                重跑\n                                        </span>\n                                            <span className=\"link\" onClick={() => {\n                                                const user = cookies.get('myapp_username') || '';\n\n                                                Modal.confirm({\n                                                    title: '终止',\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '确定终止改标签?',\n                                                    okText: '确认终止',\n                                                    cancelText: '取消',\n                                                    okButtonProps: { danger: true },\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionKill({\n                                                                taskId: record.task_id,\n                                                                fromDate: record.cur_run_date,\n                                                                toDate: record.cur_run_date,\n                                                                user,\n                                                            })\n                                                                .then((res) => {\n                                                                    resolve('');\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject();\n                                                                });\n                                                        })\n                                                            .then((res) => {\n                                                                message.success('终止成功');\n                                                                fetchData()\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('终止失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                终止\n                                        </span>\n                                            {/* <Dropdown overlay={<Menu>\n                                            <Menu.Item>\n                                                <span className=\"link\" onClick={() => { }}>\n                                                    终止\n                                                </span>\n                                            </Menu.Item>\n                                            <Menu.Item>\n                                                <span className=\"link\" onClick={() => { }}>\n                                                    强制成功\n                                                </span>\n                                            </Menu.Item>\n                                        </Menu>}>\n                                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                                更多 <DownOutlined />\n                                            </a>\n                                        </Dropdown> */}\n                                        </Space>\n                                    );\n                                },\n                            },\n                        ]}\n                        loading={loading}\n                        pagination={pageInfo}\n                        dataSource={dataList}\n                        onChange={(pageInfo: any) => {\n                            setPageInfo(pageInfo)\n                        }}\n                        rowSelection={{\n                            type: 'checkbox',\n                            selectedRowKeys,\n                            // getCheckboxProps: (record: IInstanceManagerDescItem) => { return record.task_id },\n                            onChange: (selectedRowKeys, selectedRows: IInstanceManagerDescItem[]) => {\n                                setSelectedRowKeys(selectedRowKeys)\n                                setMultiParams(selectedRows)\n                            }\n                        }}\n                        scroll={{ x: 1200, y: scrollY }}\n                    />\n                </div>\n            </Content>\n        </div>\n    );\n}\n\n"],"names":["SyncOutlined","props","ref","React","AntdIcon","_objectSpread","icon","SyncOutlinedSvg","displayName","RangePicker","DatePicker","InstanceListManager","userName","cookies","useState","dataList","setDataList","loading","setLoading","undefined","inCharge","setInCharge","useSearchParams","taskId","get","usTaskId","setUsTaskId","stateList","setStateList","loadingRedo","setLoadingRedo","visableRedo","setVisableRedo","isLogVisable","setIsLogVisable","selectedRowKeys","setSelectedRowKeys","multiParams","setMultiParams","currentLog","setCurrentLog","loadingLog","setLoadingLog","startTime","moment","subtract","startOf","format","endTime","endOf","dateInfo","setDateInfo","pageInfoInit","current","pageSize","pageInfo","setPageInfo","scrollY","setScrollY","useEffect","getTableScroll","fetchData","getInstanceManagerList","then","res","data","desc","finally","className","title","destroyOnClose","visible","footer","width","onCancel","spinning","style","minHeight","dangerouslySetInnerHTML","__html","replaceAll","ModalForm","onCreate","values","isRedoSubTask","isCheckParentInstance","user","params","map","item","task_id","fromDate","cur_run_date","toDate","param","actionMultiRedo","list","state","message","catch","err","label","name","initialValue","rules","required","value","TitleHeader","options","onChange","placeholder","onPressEnter","e","target","length","disabledDate","type","onClick","TableBox","titleNode","buttonNode","overlay","DownOutlined","rowKey","record","columns","dataIndex","key","fixed","render","text","task_name","CopyToClipboard","onCopy","CopyOutlined","sorter","a","b","Date","valueOf","start_time","end_time","spin","color","TInstanceState","CheckCircleOutlined","CloseCircleOutlined","ExclamationCircleOutlined","in_charge","placement","tries","try_limit","align","size","getInstanceLog","curRunDate","console","log","Modal","content","okText","cancelText","okButtonProps","danger","onOk","Promise","resolve","reject","actionKill","pagination","dataSource","rowSelection","selectedRows","scroll","x","y"],"sourceRoot":""}